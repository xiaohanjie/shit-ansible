- name: populate service facts
  service_facts:

- name: cdm install dir
  set_fact:
    _cdm_install_dir: "{{ cdm_dir }}"

- name: Create the cdm server init_cmd.sh config
  template:
    src: patch_cdm.j2
    dest: "{{ _cdm_install_dir  }}/patch_cdm.sh"
    owner: "root"
    group: "root"
    mode: 0755

- name: Compose the cdm patch url
  set_fact:
    _cdm_patch_download_url: "{{ cdm_patch_repo }}"

- name: cdm install dir
  set_fact:
    _cdm_install_dir: "{{ cdm_dir }}"

- name: Download the cdm patch package
  get_url:
    url: "{{ _cdm_patch_download_url }}"
    dest: "{{ _cdm_install_dir }}/Patch_x64-latest.tar.gz"
  register: _download_patch
  until: _download_patch is succeeded
  retries: 5
  delay: 2

- name: unarchive the cdm patch package
  unarchive:
    src: "{{ _cdm_install_dir }}/Patch_x64-latest.tar.gz"
    remote_src: yes
    dest: "{{ _cdm_install_dir }}"

- name: Run cdm patch copy shell
  shell: |
    cd "{{ _cdm_install_dir }}"
    ./patch_cdm.sh patch_cdm "{{ cdm_service }}" 
#    rm -rf latest.tar.gz 

- name: start cdm HWNautilus service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "HW"
    - cdm_service == "Nautilus"
  loop:
    - HWNautilusDataService.service
    - HWNautilusMetaService.service
    - HWNautilusTaskService.service
    - HWNautilusThriftService.service

- name: wait for cdm HWNautilus service
  shell: "systemctl status {{ item }} | grep Active"
  register: _Nautilus_status
  until: '"running" in _Nautilus_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "HW"
    - cdm_service == "Nautilus"
  loop:
    - HWNautilusDataService.service
    - HWNautilusMetaService.service
    - HWNautilusTaskService.service
    - HWNautilusThriftService.service
    
- name: Start cdm service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "AB"
    - cdm_service == "Nautilus"
  loop:
    - ABNautilusDataService.service
    - ABNautilusMetaService.service
    - ABNautilusTaskService.service
    - ABNautilusThriftService.service

- name: wait for cdm ABNautilus service
  shell: "systemctl status {{ item }} | grep Active"
  register: _Nautilus_status
  until: '"running" in _Nautilus_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "AB"
    - cdm_service == "Nautilus"
  loop:
    - ABNautilusDataService.service
    - ABNautilusMetaService.service
    - ABNautilusTaskService.service
    - ABNautilusThriftService.service

- name: start cdm HWCDMStoreMgmService service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "HW"
    - cdm_service == "CDMStoreMgm"
  loop:
    - HWCDMStoreMgmService.service

- name: wait for cdm HWCDMStoreMgmService service
  shell: "systemctl status {{ item }} | grep Active"
  register: _CDMStoreMgmService_status
  until: '"running" in _CDMStoreMgmService_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "HW"
    - cdm_service == "CDMStoreMgm"
  loop:
    - HWCDMStoreMgmService.service

- name: start cdm ABCDMStoreMgmService service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "AB"
    - cdm_service == "CDMStoreMgm"
  loop:
    - ABCDMStoreMgmService.service

- name: wait for cdm ABCDMStoreMgmService service
  shell: "systemctl status {{ item }} | grep Active"
  register: _CDMStoreMgmService_status
  until: '"running" in _CDMStoreMgmService_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "AB"
    - cdm_service == "CDMStoreMgm"
  loop:
    - ABCDMStoreMgmService.service

- name: start cdm HWDataSyncService service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "HW"
    - cdm_service == "DataSync"
  loop:
    - HWDataSyncService.service

- name: wait for cdm HWDataSyncService service
  shell: "systemctl status {{ item }} | grep Active"
  register: _DataSyncService_status
  until: '"running" in _DataSyncService_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "HW"
    - cdm_service == "DataSync"
  loop:
    - HWDataSyncService.service

- name: start cdm ABDataSyncService service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "AB"
    - cdm_service == "DataSync"
  loop:
    - ABDataSyncService.service

- name: wait for cdm ABDataSyncService service
  shell: "systemctl status {{ item }} | grep Active"
  register: _DataSyncService_status
  until: '"running" in _DataSyncService_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "AB"
    - cdm_service == "DataSync"
  loop:
    - ABDataSyncService.service

- name: start cdm HWLinkMgmService service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "HW"
    - cdm_service == "LinkMgm"
  loop:
    - HWLinkMgmService.service

- name: wait for cdm HWLinkMgmService service
  shell: "systemctl status {{ item }} | grep Active"
  register: _LinkMgmService_status
  until: '"running" in _LinkMgmService_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "HW"
    - cdm_service == "LinkMgm"
  loop:
    - HWLinkMgmService.service

- name: start cdm ABLinkMgmService service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "AB"
    - cdm_service == "LinkMgm"
  loop:
    - ABLinkMgmService.service

- name: wait for cdm ABLinkMgmService service
  shell: "systemctl status {{ item }} | grep Active"
  register: _LinkMgmService_status
  until: '"running" in _LinkMgmService_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "AB"
    - cdm_service == "LinkMgm"
  loop:
    - ABLinkMgmService.service

- name: start cdm HWSnapSyncService service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "HW"
    - cdm_service == "SnapSync"
  loop:
    - HWSnapSyncService.service

- name: wait for cdm HWSnapSyncService service
  shell: "systemctl status {{ item }} | grep Active"
  register: _SnapSyncService_status
  until: '"running" in _SnapSyncService_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "HW"
    - cdm_service == "SnapSync"
  loop:
    - HWSnapSyncService.service

- name: start cdm ABSnapSyncService service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "AB"
    - cdm_service == "SnapSync"
  loop:
    - ABSnapSyncService.service

- name: wait for cdm ABSnapSyncService service
  shell: "systemctl status {{ item }} | grep Active"
  register: _SnapSyncService_status
  until: '"running" in _SnapSyncService_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "AB"
    - cdm_service == "SnapSync"
  loop:
    - ABSnapSyncService.service

- name: start cdm HWStorageResMgmService service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "HW"
    - cdm_service == "StorageResMgm"
  loop:
    - HWStorageResMgmService.service

- name: wait for cdm HWStorageResMgmService service
  shell: "systemctl status {{ item }} | grep Active"
  register: _StorageResMgmService_status
  until: '"running" in _StorageResMgmService_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "HW"
    - cdm_service == "StorageResMgm"
  loop:
    - HWStorageResMgmService.service

- name: start cdm ABStorageResMgmService service
  service:
    name: "{{ item }}"
    state: restarted
  when: 
    - cdm_branch == "AB"
    - cdm_service == "StorageResMgm"
  loop:
    - ABStorageResMgmService.service

- name: wait for cdm ABStorageResMgmService service
  shell: "systemctl status {{ item }} | grep Active"
  register: _StorageResMgmService_status
  until: '"running" in _StorageResMgmService_status.stdout'
  retries: 3
  delay: 15
  when:
    - cdm_branch == "AB"
    - cdm_service == "StorageResMgm"
  loop:
    - ABStorageResMgmService.service
